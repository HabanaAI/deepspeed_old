def stableBranch = GERRIT_BRANCH - '_next'
src = library("pipeline-library@$stableBranch")

def user_install = env.runInDocker == 'true' ? '' : '--user'
def preBuildStages = [
    'Clean Old .whl pakages': { util ->
        util.runShellCommandWrapper('rm -rf ${PYTORCH_FORK_ROOT}/dist/*.whl')
        util.runShellCommandWrapper('rm -rf ${PYTORCH_VISION_FORK_ROOT}/dist/*.whl')
        util.runShellCommandWrapper('rm -rf ${PYTORCH_MODULES_ROOT_PATH}/dist/*.whl')
    },
    'Install pytorch wheels': { util ->
        util.runShellCommandWrapper("""
            set -xe
            pip install -U \${PYTORCH_FORK_RELEASE_BUILD}/pkgs/*torch*.whl ${user_install}
        """)
    }
]

def buildDependencies = ['PYTORCH_MODULES']
def testDependencies = ['HCL', 'CORAL_SIM']
def buildCommands = [
    'deepspeed': [
        'command': 'build_deepspeed_fork'
    ]
]
def requiredArtifact = [
    'PYTORCH': ['test', 'data'],
    'HCL': ['test'],
    'CORAL_SIM': ['test'],
]
genericBuilder(
    src: src,
    preBuildStages: preBuildStages,
    requiredArtifact: requiredArtifact,
    buildCommands: buildCommands,
    testDependencies: testDependencies,
    buildDependencies: buildDependencies,
    manifest: manifest
)